knitr::opts_chunk$set(echo = TRUE)
library(rjags)
library(coda)
library(MCMCpack)
#library(bayesplot)
library(ggmcmc)
library(dplyr)
library(gridExtra)
working.dir <- ".."
models.dir <- file.path(working.dir, "models")
trace.dir <- file.path(working.dir, "trace")
#dir.create(trace.dir, showWarnings = F)
runName <- "wks_K3_S5_I50_linear_1"
I <- 50
K <- 3
S <- 5
set.seed(123)
pi <- c(0.2, 0.5, 0.3)
z <- sample(1:K, size = I, replace = T, prob = pi)
w <- matrix(c(0.9, 0.95, 0.9, 0.8, 0.9,
0.7, 0.8, 0.85, 0.78, 0.7,
0.7, 0.2, 0.83, 0.76, 0.5),
byrow=T,
nrow=K, ncol=S)
colnames(w) <-  paste0("sample", 1:S)
tcn <- matrix(2, nrow=I, ncol=S)
m <- matrix(rep(sample(1:2, size = I, replace = T), S),
nrow=I, ncol=S)
W <- w[z, ]
calcTheta <- function(m, tcn, w) {
(m * w) / (tcn * w + 2*(1-w))
}
theta <- calcTheta(m, tcn, W)
n <- replicate(S, rpois(I, 100))
y <- matrix(NA, nrow=I, ncol=S)
for (i in 1:I) {
for (s in 1:S) {
y[i, s] <- rbinom(1, n[i, s], theta[i,s])
}
}
test.data <- list("I" = I, "S" = S, "K" = K,
"y" = y, "n" = n,
"m" = m, "tcn" = tcn)
p <- test.data$y/test.data$n
colnames(w) <- colnames(p) <- paste0("sample", 1:S)
colnames(m) <- colnames(p)
m2 <- m %>%
as_tibble() %>%
mutate(z=factor(z),
variant_index=seq_len(nrow(.))) %>%
gather("sample", "multiplicity", -c(z, variant_index)) %>%
mutate(sample=factor(sample, levels=colnames(p)))
p2 <- p %>%
as_tibble() %>%
mutate(z=factor(z),
variant_index=seq_len(nrow(.))) %>%
gather("sample", "fraction", -c(z, variant_index)) %>%
mutate(sample=factor(sample, levels=colnames(p))) %>%
left_join(m2, by=c("z", "variant_index", "sample")) %>%
mutate(multiplicity=factor(multiplicity))
## what the data looks like by sample
ggplot(p2, aes(z, fraction)) +
geom_jitter(width=0.1, size=1, aes(color=multiplicity)) +
facet_wrap(~sample) +
ylab("y/n") +
xlab("True cluster") +
theme(panel.background=element_rect(fill="white", color="black"))
## by variant
ggplot(p2, aes(sample, fraction, group=variant_index)) +
geom_point(size=1) +
geom_line(aes(color=z)) +
ylab("y/n") +
xlab("Patient sample\n(arbitrary order)") +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
guides(color=guide_legend(title="Variant cluster\n(z)"))
##
## Cluster means and variances
##
meds   <- apply(W, 2, median)
slevels <- colnames(w)[order(meds, decreasing=TRUE)]
w2 <- w %>%
as_tibble() %>%
mutate(z=factor(1:K)) %>%
##       variant_index=seq_len(nrow(.))) %>%
gather("sample", "omega", -z) %>%
mutate(sample=factor(sample, levels=slevels))
##fig1 <- ggplot(w2, aes(z, omega)) +
##    geom_jitter(width=0.1, size=1) +
##    facet_wrap(~sample) +
##    ylab(expression(omega)) +
##    xlab("True cluster") +
##    theme(panel.background=element_rect(fill="white", color="black"))
fig2 <- ggplot(w2, aes(sample, omega, group=z)) +
geom_point(size=1,  aes(color=z)) +
geom_line(aes(color=z)) +
ylab(expression(omega)) +
xlab("") +
theme(axis.text.x=element_text(angle=45, hjust=1),
panel.background=element_rect(fill="white", color="black"),
legend.key=element_rect(fill="white", color="white")) +
guides(color=guide_legend(title="Variant cluster\n(z)"))
fig2
jags.file <- file.path(models.dir, "w.jags")
inits <- list(".RNG.name" = "base::Wichmann-Hill",
".RNG.seed" = 123)
jags.m <- jags.model(jags.file, test.data,
n.chains = 1,
inits = inits,
n.adapt = 1000)
params <- c("z", "w", "ystar")
samps <- coda.samples(jags.m, params, n.iter=10000, thin=7)
jags_df <- ggs(samps)
#ggs_traceplot(jags_df, family="w")
s <- summary(samps)
#effectiveSize(samps)
#pdf(file.path(trace.dir, paste0(runName, "_trace.pdf")))
#plot(samps)
#dev.off()
##
## 50 mutations x 10 samples
chains <- do.call(rbind, samps)
ystar <- chains[, grep("ystar", colnames(chains))]
## each row of MCMC is in column-major order
orig.order <- tibble(statistic=colnames(ystar))
ppd.summaries <- ystar %>%
as_tibble() %>%
gather("statistic", "value") %>%
group_by(statistic) %>%
summarize(mean=mean(value),
q1=quantile(value, 0.025),
q3=quantile(value, 0.975))
ppd.summaries2 <- left_join(orig.order,
ppd.summaries, by="statistic") %>%
mutate(observed=as.numeric(test.data$y)) %>%
mutate(sample=paste0("sample", rep(1:S, each=I)),
variant=rep(1:I, S))
ggplot(ppd.summaries2, aes(x=statistic, y=mean,
ymin=q1,
ymax=q3)) +
geom_errorbar() +
geom_point(aes(x=statistic, y=observed),
size=1, color="steelblue") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.background=element_rect(fill="white",
color="black")) +
ylab("Middle 95% of posterior\npredictive distribution") +
xlab("observation index (column-major order)") +
facet_wrap(~sample)
mcmc_vals <- s$statistics
mcmc_z <- as.vector(mcmc_vals[substr(rownames(mcmc_vals), 1, 1) == "z", "Mean"])
plot(z, mcmc_z, type = "p")
z.df <- tibble(true.z = z,
mcmc.z = mcmc_z,
variant = paste0("Variant ", 1:I))
z.plot <- ggplot(z.df, aes(true.z, mcmc.z)) +
geom_jitter(stat = "identity", #position = "jitter",
width = 0.03, height = 0,shape = 21, alpha = 0.3, size = 2,
colour = "blue", fill = "blue") +
scale_x_discrete("True z", 1:K, 1:K, 1:K) +
scale_y_discrete("Mean z from MCMC", 1:K, 1:K, 1:K)
z.plot
#ggsave(file.path(working.dir, paste0(runName, "_zplot.pdf")), z.plot, height=3, width=3)
z_comp <- data.frame(z, mcmc_z)
z_mapping <- distinct(round(z_comp, 0))
z_mapping <- z_mapping[order(z_mapping$mcmc_z), ]
plot.new()
grid.table(z_mapping, rows=NULL)
mcmc_w <- mcmc_vals[substr(rownames(mcmc_vals), 1, 1) == "w", "Mean"]
mcmc_w <- matrix(mcmc_w, nrow=K)
colnames(mcmc_w) <- paste0("sample", 1:S)
mcmc_w2 <- mcmc_w %>%
as_tibble() %>%
mutate(cluster=z_mapping$z) %>%
gather("sample", "mcmc_w", -c(cluster))
w_comp <- w %>%
as_tibble() %>%
mutate(cluster=1:K) %>%
gather("sample", "w", -c(cluster)) %>%
left_join(mcmc_w2, by=c("cluster", "sample")) %>%
mutate(cluster=factor(cluster),
sample=factor(sample))
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab(expression("Mean "*omega*" from MCMC")) +
xlab(expression("True " omega))
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab(expression("Mean "*omega*" from MCMC")) +
xlab(expression("True " *omega*))
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab(expression("Mean "omega" from MCMC")) +
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab(expression("Mean "*omega*" from MCMC")) +
xlab(expression("True " *omega*))
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab("Mean expression(omega) from MCMC") +
xlab(expression(omega))
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab("Mean " expression(omega) "from MCMC") +
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab("Mean ", expression(omega), "from MCMC") +
xlab(expression(omega))
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab(expression("Mean "*omega*" from MCMC")) +
xlab(expression("True"*omega))
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab(expression("Mean "*omega*" from MCMC")) +
xlab(expression("True "*omega))
colnames(mcmc_w) <- paste0("Sample ", 1:S)
mcmc_w2 <- mcmc_w %>%
as_tibble() %>%
mutate(cluster=z_mapping$z) %>%
gather("sample", "mcmc_w", -c(cluster))
w_comp <- w %>%
as_tibble() %>%
mutate(cluster=1:K) %>%
gather("sample", "w", -c(cluster)) %>%
left_join(mcmc_w2, by=c("cluster", "sample")) %>%
mutate(cluster=factor(cluster),
sample=factor(sample))
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab(expression("Mean "*omega*" from MCMC")) +
xlab(expression("True "*omega))
colnames(mcmc_w) <- paste0("sample", 1:S)
mcmc_w2 <- mcmc_w %>%
as_tibble() %>%
mutate(cluster=z_mapping$z) %>%
gather("sample", "mcmc_w", -c(cluster))
w_comp <- w %>%
as_tibble() %>%
mutate(cluster=1:K) %>%
gather("sample", "w", -c(cluster)) %>%
left_join(mcmc_w2, by=c("cluster", "sample")) %>%
mutate(cluster=factor(cluster),
sample=factor(sample))
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab(expression("Mean "*omega*" from MCMC")) +
xlab(expression("True "*omega))
w+comp
w_comp
colnames(mcmc_w) <- paste0("Sample ", 1:S)
mcmc_w2 <- mcmc_w %>%
as_tibble() %>%
mutate(cluster=z_mapping$z) %>%
gather("sample", "mcmc_w", -c(cluster))
mcmc_w2
w_comp <- w %>%
as_tibble() %>%
mutate(cluster=1:K) %>%
gather("sample", "w", -c(cluster)) %>%
left_join(mcmc_w2, by=c("cluster", "sample")) %>%
mutate(cluster=factor(cluster),
sample=factor(sample))
w_comp
p <- test.data$y/test.data$n
colnames(w) <- colnames(p) <- paste0("Sample ", 1:S)
colnames(m) <- colnames(p)
m2 <- m %>%
as_tibble() %>%
mutate(z=factor(z),
variant_index=seq_len(nrow(.))) %>%
gather("sample", "multiplicity", -c(z, variant_index)) %>%
mutate(sample=factor(sample, levels=colnames(p)))
p2 <- p %>%
as_tibble() %>%
mutate(z=factor(z),
variant_index=seq_len(nrow(.))) %>%
gather("sample", "fraction", -c(z, variant_index)) %>%
mutate(sample=factor(sample, levels=colnames(p))) %>%
left_join(m2, by=c("z", "variant_index", "sample")) %>%
mutate(multiplicity=factor(multiplicity))
## what the data looks like by sample
ggplot(p2, aes(z, fraction)) +
geom_jitter(width=0.1, size=1, aes(color=multiplicity)) +
facet_wrap(~sample) +
ylab("y/n") +
xlab("True cluster") +
theme(panel.background=element_rect(fill="white", color="black"))
## by variant
ggplot(p2, aes(sample, fraction, group=variant_index)) +
geom_point(size=1) +
geom_line(aes(color=z)) +
ylab("y/n") +
xlab("Patient sample\n(arbitrary order)") +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
guides(color=guide_legend(title="Variant cluster\n(z)"))
##
## Cluster means and variances
##
meds   <- apply(W, 2, median)
slevels <- colnames(w)[order(meds, decreasing=TRUE)]
w2 <- w %>%
as_tibble() %>%
mutate(z=factor(1:K)) %>%
##       variant_index=seq_len(nrow(.))) %>%
gather("sample", "omega", -z) %>%
mutate(sample=factor(sample, levels=slevels))
##fig1 <- ggplot(w2, aes(z, omega)) +
##    geom_jitter(width=0.1, size=1) +
##    facet_wrap(~sample) +
##    ylab(expression(omega)) +
##    xlab("True cluster") +
##    theme(panel.background=element_rect(fill="white", color="black"))
fig2 <- ggplot(w2, aes(sample, omega, group=z)) +
geom_point(size=1,  aes(color=z)) +
geom_line(aes(color=z)) +
ylab(expression(omega)) +
xlab("") +
theme(axis.text.x=element_text(angle=45, hjust=1),
panel.background=element_rect(fill="white", color="black"),
legend.key=element_rect(fill="white", color="white")) +
guides(color=guide_legend(title="Variant cluster\n(z)"))
fig2
mcmc_w <- mcmc_vals[substr(rownames(mcmc_vals), 1, 1) == "w", "Mean"]
mcmc_w <- matrix(mcmc_w, nrow=K)
colnames(mcmc_w) <- paste0("Sample ", 1:S)
mcmc_w2 <- mcmc_w %>%
as_tibble() %>%
mutate(cluster=z_mapping$z) %>%
gather("sample", "mcmc_w", -c(cluster))
w_comp <- w %>%
as_tibble() %>%
mutate(cluster=1:K) %>%
gather("sample", "w", -c(cluster)) %>%
left_join(mcmc_w2, by=c("cluster", "sample")) %>%
mutate(cluster=factor(cluster),
sample=factor(sample))
w_comp
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab(expression("Mean "*omega*" from MCMC")) +
xlab(expression("True "*omega))
ggsave(file.path(working.dir, paste0(runName, "_wScatter.pdf")), height=3, width=4)
# scatter
ggplot(w_comp, aes(w, mcmc_w)) +
geom_point(size=3, aes(color=sample, shape=cluster)) +
geom_abline(slope=1, intercept=0, linetype="dotted") +
ylab(expression("Mean "*omega*" estimated by model")) +
xlab(expression("True "*omega))
ggsave(file.path(working.dir, paste0(runName, "_wScatter.pdf")), height=3, width=4)
