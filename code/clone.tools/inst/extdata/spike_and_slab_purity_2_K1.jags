model {
	for (i in 1:I) { ## for each variant
		for (s in 1:S) {  ## for each sample
			theta.temp[i,s] <- m[i,s] * w[z[i], s] * purity[s] /
                       (tcn[i,s] * purity[s] + 2 * (1 - purity[s]))
			theta[i,s] <- ifelse(theta.temp[i,s] > 1, 1, theta.temp[i,s])
			y[i, s] ~ dbin(theta[i,s], n[i,s])
			## posterior predictive distribution
			ystar[i, s] ~ dbin(theta[i, s], n[i, s])
		}

		z[i] <- 1
	}

	for (s in 1:S) {
		p[1,s] ~ dbeta(5,2)
		z.p[1,s] ~ dcat(c(p[1,s], 1-p[1,s]))

		# w[1,s] ~ dbeta(a[z.p[1,s]], b[z.p[1,s]])

		w1[1,s] ~ dbeta(1,1)T(0.005, )
		w[1,s] <- ifelse(z.p[1,s] == 1, w1[1,s], 0)

	}
}