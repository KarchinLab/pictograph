model {

	for (s in 1:S) {  ## for each sample
		theta.temp[s] <- m[1,s] * w[1,s] * purity[s] /
                   (tcn[1,s] * purity[s] + 2 * (1 - purity[s]))
		theta[s] <- ifelse(theta.temp[s] > 1, 1, theta.temp[s])
		y[1, s] ~ dbin(theta[s], n[1, s])
		## posterior predictive distribution
		ystar[s] ~ dbin(theta[s], n[1, s])
	}
    z <- 1
	for (s in 1:S) {
		p[1,s] ~ dbeta(5,2)
		z.p[1,s] ~ dcat(c(p[1,s], 1-p[1,s]))

		# w[1,s] ~ dbeta(a[z.p[1,s]], b[z.p[1,s]])

		w1[1,s] ~ dbeta(1,1)T(0.005, )
		w[1,s] <- ifelse(z.p[1,s] == 1, w1[1,s], 0)

	}
}