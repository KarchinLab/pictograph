model {
	for (i in 1:I) { ## for each variant
		for (s in 1:S) {  ## for each sample
			theta.temp[i,s] <- m[i,s] * w[z[i], s] * purity[s] /
                       (tcn[i,s] * purity[s] + 2 * (1 - purity[s]))
			theta[i,s] <- ifelse(theta.temp[i,s] > 1, 1, theta.temp[i,s])
			y[i, s] ~ dbin(theta[i,s], n[i,s])
			## posterior predictive distribution
			ystar[i, s] ~ dbin(theta[i, s], n[i, s])
		}
		z[i] ~ dcat(pi[1:K])
	}
	alpha <- rep(1, K)
	pi[1:K] ~ ddirch(alpha[1:K])

	for (k in 1:K) {

		for (s in 1:S) {
			#p[k,s] ~ dbeta(2,2)
			#z.p[k,s] ~ dcat(c(p[k,s], 1-p[k,s]))

			#w1[k,s] ~ dbeta(1,1)T(0.005, )
			#w_unsorted[k,s] <- ifelse(z.p[k,s] == 1, w1[k,s], 0)
			w_unsorted[k,s] ~ dbeta(1,1)

		}
		
	}

	# order w for sample_to_sort
	for (s in 1:S) {
		w[1:K, s] <- ifelse(s == sample_to_sort, sort(w_unsorted[1:K, s]), w_unsorted[1:K, s])
	}
}